openapi: "3.0.0"
info:
  version: "0.1"
  title: "arXiv File Management Service"
  contact:
    name: "arXiv API Team"
    email: nextgen@arxiv.org
  license:
    name: MIT

paths:
  /status:
    get:
      operationId: getServiceStatus
      summary: |
        Get information about the current status of file management service.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: 'resources/serviceStatus.json'

  /logs:
    get:
      operationId: getServiceLogs
      summary: |
        Retrieve service-level log files. Indicates history or actions
        on file management service.
      responses:
        '200':
          description: Activity log for file management service.
          content:
            application/json:
              schema:
                $ref: 'resources/Log.json'
        '401':
          description: Unauthorized. Missing valid authentication information.
        '403':
          description: |
            Forbidden. Client or user is not authorized to access logs for this
            workspace.


  /:
    post:
      operationId: uploadPackage
      summary: |
        Upload a new file or package (e.g. an arXiv submission source package).
        If the file is an archive (zip, tar-ball, etc), it will be unpacked.
        A variety of processing and sanitization routines are performed, and
        any errors or warnings (including deleted files) will be included in
        the response body.
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '201':
          description: |
            The upload has been accepted and processed, and a new upload
            workspace has been created.
          headers:
            Location:
              description: URI of the upload workspace.
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: 'resources/Workspace.json'
        '400':
          description: |
            There was an unrecoverable problem when processing the upload. For
            example, the upload could not be unpacked, or was not in an
            acceptable format.
          content:
            application/json:
              schema:
                $ref: 'resources/error.json'
        '401':
          description: Unauthorized. Missing valid authentication information.
        '403':
          description: Forbidden. Client or user is not authorized to upload.
        '415':
          description: The uploaded file is not of an acceptable type.
          content:
            application/json:
              schema:
                $ref: 'resources/error.json'

  /{upload_id}:
    parameters:
      -in: path
       name: upload_id
       description: Unique long-lived identifier for the upload.
       required: true
       schema:
         type: string

    get:
      operationId: getUploadStatus
      summary: |
        Retrieve metadata about an accepted and processed upload package.
      parameters:
        -in: path
         name: upload_id
         description: Unique long-lived identifier for the upload.
         required: true
         schema:
           type: string
      responses:
        '200':
          description: A description of the upload package.
          content:
            application/json:
              schema:
                $ref: 'resources/Workspace.json'
        '401':
          description: Unauthorized. Missing valid authentication information.
        '403':
          description: |
            Forbidden. Client is not authorized to access this upload.

    post:
      operationId: addFilesToPackage
      summary: |
        Upload a file or package to an existing upload workspace. If the file
        is an archive (zip, tar-ball, etc), it will be unpacked. A variety of
        processing and sanitization routines are performed. Existing files will
        be overwritten by files of the  same name. and any errors or warnings
        (including deleted files) will be included in the response body.

      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '201':
          description: |
            The upload has been accepted and processed, and the upload
            workspace updated.
          headers:
            Location:
              description: URI of the upload workspace.
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: 'resources/Workspace.json'
        '400':
          description: |
            There was an unrecoverable problem when processing the upload. For
            example, the upload could not be unpacked, or was not in an
            acceptable format.
          content:
            application/json:
              schema:
                $ref: 'resources/error.json'
        '401':
          description: Unauthorized. Missing valid authentication information.
        '403':
          description: Forbidden. Client or user is not authorized to upload.
        '415':
          description: The uploaded file is not of an acceptable type.
          content:
            application/json:
              schema:
                $ref: 'resources/error.json'
    delete:
      operationId: deleteWorkspace
      description: Deletes the entire workspace.
      responses:
        '204':
          description: The workspace was deleted successfully.
        '401':
          description: Unauthorized. Missing valid authentication information.
        '403':
          description: |
            Forbidden. Client or user is not authorized to delete this
            workspace.

  /{upload_id}/checkpoint_with_upload:
    parameters:
      -in: path
       name: upload_id
       description: Unique long-lived identifier for the upload.
       required: true
       schema:
         type: string
    post:
      operationId: addFilesToPackage
      summary: |
        Create a checkpoint prior to unpacking new files being uploaded. Otherwise,
        this request is identical to file upload to an existing workspace.

        Upload a file or package to an existing upload workspace. If the file
        is an archive (zip, tar-ball, etc), it will be unpacked. A variety of
        processing and sanitization routines are performed. Existing files will
        be overwritten by files of the same name and any errors or warnings
        (including deleted files) will be included in the response body.

      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '201':
          description: |
            The upload has been accepted and processed, and the upload
            workspace updated.
          headers:
            Location:
              description: URI of the upload workspace.
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: 'resources/Result.json'
        '400':
          description: |
            There was an unrecoverable problem when processing the upload. For
            example, the upload could not be unpacked, or was not in an
            acceptable format.
          content:
            application/json:
              schema:
                $ref: 'resources/error.json'
        '401':
          description: Unauthorized. Missing valid authentication information.
        '403':
          description: Forbidden. Client or user is not authorized to upload.
        '415':
          description: The uploaded file is not of an acceptable type.
          content:
            application/json:
              schema:
                $ref: 'resources/error.json'


  /{upload_id}/delete_all:
    summary: Delete all files in the workspace.
    parameters:
      -in: path
       name: upload_id
       description: Unique long-lived identifier for the upload.
       required: true
       schema:
         type: string
    post:
      operationId: deleteAll
      desription: |
        Delete all files in the workspace. Does not delete the workspace
        itself.
      responses:
        '200':
          description: All files in the workspace were deleted successfully.
          content:
            application/json:
              schema:
                $ref: 'resources/Workspace.json'
        '401':
          description: Unauthorized. Missing valid authentication information.
        '403':
          description: |
            Forbidden. Client or user is not authorized to delete files in this
            workspace.


  /{upload_id}/{file_path}:
    parameters:
      -in: path
       name: upload_id
       description: Unique long-lived identifier for the upload.
       required: true
       schema:
         type: string
      -in: path
       name: file_path
       description: Path-like key for individual file in upload workspace.
       required: true
       schema:
         type: string
    delete:
      operationId: deleteFile
      summary: Deletes a single file.
      responses:
        '200':
          description: The file was deleted successfully.
          content:
            application/json:
              schema:
                $ref: 'resources/Workspace.json'
        '401':
          description: Unauthorized. Missing valid authentication information.
        '403':
          description: |
            Forbidden. Client or user is not authorized to delete this file.

  /{upload_id}/{file_path}/content:
    parameters:
      -in: path
       name: upload_id
       description: Unique long-lived identifier for the upload.
       required: true
       schema:
         type: string
      -in: path
       name: file_path
       description: Path-like key for individual file in upload workspace.
       required: true
       schema:
         type: string
    get:
      operationId: getFileContent
      summary: Get the content of a single file from the upload workspace.
      responses:
        '200':
          description: File content.
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary

  /{upload_id}/content:
    parameters:
      -in: path
       name: upload_id
       description: Unique long-lived identifier for the upload.
       required: true
       schema:
         type: string

    head:
      operationId: checkUploadContentExists
      summary: Verify that upload content exists.
      responses:
        '200':
          description: Content exists for this upload package.
          headers:
            ETag:
              description: |
                Base64-encoded MD5 checksum of the upload package (as a
                tarball).
              schema:
                type: str

    get:
      operationId: getUploadContent
      summary: Retrieve the sanitized/processed upload package.
      responses:
        '200':
          description: Returns the sanitized/processed upload package.
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
          headers:
            ETag:
              description: |
                Base64-encoded MD5 checksum of the upload package (as a
                tarball).
              schema:
                type: str
        '401':
          description: Unauthorized. Missing valid authentication information.
        '403':
          description: |
            Forbidden. Client or user is not authorized to download this
            package.

  /{upload_id}/lock:
    parameters:
      -in: path
       name: upload_id
       description: Unique long-lived identifier for the upload.
       required: true
       schema:
         type: string
    post:
      operationId: lockUpload
      summary: |
        Lock workspace (read-only mode) while other services are processing
        (major state transitions are occurring).
      responses:
        '201':
          description: The upload workspace was locked successfully.
          content:
            application/json:
              schema:
                $ref: 'resources/Workspace.json'
        '400':
          description: |
            There was an unrecoverable problem when handling the request.
          content:
            application/json:
              schema:
                $ref: 'resources/error.json'
        '401':
          description: Unauthorized. Missing valid authentication information.
        '403':
          description: |
            Forbidden. Client or user is not authorized to lock this resource.

  /{upload_id}/unlock:
    parameters:
      -in: path
       name: upload_id
       description: Unique long-lived identifier for the upload.
       required: true
       schema:
         type: string
    post:
      operationId: unlockUpload
      summary: Unlock workspace and enable write mode.
      responses:
        '201':
          description: The upload workspace was unlocked successfully.
          content:
            application/json:
              schema:
                $ref: 'resources/Workspace.json'
        '400':
          description: |
            There was an unrecoverable problem when handling the request.
          content:
            application/json:
              schema:
                $ref: 'resources/error.json'
        '401':
          description: Unauthorized. Missing valid authentication information.
        '403':
          description: |
            Forbidden. Client or user is not authorized to unlock this
            resource.

  /{upload_id}/release:
    parameters:
      -in: path
       name: upload_id
       description: Unique long-lived identifier for the upload.
       required: true
       schema:
         type: string
    post:
      operationId: releaseUpload
      summary: |
        Client indicates they are finished with workspace. File management
        service is free to remove uploaded files, or schedule files for
        removal at later time.
      responses:
        '201':
          description: The upload workspace was released successfully.
          content:
            application/json:
              schema:
                $ref: 'resources/Workspace.json'
        '400':
          description: |
            There was an unrecoverable problem when handling the request.
          content:
            application/json:
              schema:
                $ref: 'resources/error.json'
        '401':
          description: Unauthorized. Missing valid authentication information.
        '403':
          description: |
            Forbidden. Client or user is not authorized to release this
            resource.

  /{upload_id}/logs:
    parameters:
      -in: path
       name: upload_id
       description: Unique long-lived identifier for the upload.
       required: true
       schema:
         type: string
    get:
      operationId: getLogs
      summary: |
        Retrieve log files related to workspace. Indicates history or actions
        on workspace.
      responses:
        '200':
          description: Activity log for the upload workspace.
          content:
            application/json:
              schema:
                $ref: 'resources/Log.json'
        '401':
          description: Unauthorized. Missing valid authentication information.
        '403':
          description: |
            Forbidden. Client or user is not authorized to access logs for this
            workspace.

  /{upload_id}/checkpoint:
    parameters:
      -in: path
       name: upload_id
       description: Unique long-lived identifier for the upload.
       required: true
       schema:
         type: string
    post:
      operationId: createCheckpoint
      desription: |
        Create a checkpoint of existing user-uploaded files for specified workspace.
      responses:
        '200':
          description: Checkpoint was created successfully.
          content:
            application/json:
              schema:
                $ref: 'resources/Result.json'
        '401':
          description: Unauthorized. Missing valid authentication information.
        '403':
          description: |
            Forbidden. Client or user is not authorized to create checkpoint for this
            workspace.

  /{upload_id}/checkpoint/{checkpoint_checksum}:
    parameters:
      -in: path
       name: upload_id
       description: Unique long-lived identifier for the upload.
       required: true
       schema:
         type: string
      -in: path
       name: checkpoint_checksum
       description: Checkpoint checksum that uniquely identifies
         checkpoint file.
       required: true
       schema:
         type: string
    head:
      operationId: checkCheckpointExists
      summary: Verify that checkpoint file exists.
      responses:
        '200':
          description: Specified checkpoint file exists.
          headers:
            ETag:
              description: |
                Base64-encoded MD5 checksum of the upload package (as a
                tarball).
              schema:
                type: str
        '401':
          description: Unauthorized. Missing valid authentication information.
        '403':
          description: |
            Forbidden. Client or user is not authorized to create checkpoint for this
            workspace.
    get:
      operationId: getCheckpointContent
      summary: Retrieve specified checkpoint file.
      responses:
        '200':
          description: Returns gzipped tar checkpoint file.
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
          headers:
            ETag:
              description: |
                Base64-encoded MD5 checksum of the checksum file (gzipped tarball).
              schema:
                type: str
        '401':
          description: Unauthorized. Missing valid authentication information.
        '403':
          description: |
            Forbidden. Client or user is not authorized to download checkpoint file.

  /{upload_id}/list_checkpoints:
    parameters:
      -in: path
       name: upload_id
       description: Unique long-lived identifier for the upload.
       required: true
       schema:
         type: string
    get:
      operationId: getListCheckpoints
      summary: |
        Returns list of checkpoints.
      responses:
        '200':
          description: List of checkpoints with checksums.
          content:
            application/json:
              schema:
                $ref: 'resources/ListChecksumResult.json'
        '401':
          description: Unauthorized. Missing valid authentication information.
        '403':
          description: |
            Forbidden. Client is not authorized to access this request/workspace.


  /{upload_id}/restore_checkpoint/{checkpoint_checksum}:
    parameters:
      -in: path
       name: upload_id
       description: Unique long-lived identifier for the upload.
       required: true
       schema:
         type: string
      -in: path
       name: checkpoint_checksum
       description: Checkpoint checksum that uniquely identifies
         checkpoint file.
       required: true
       schema:
         type: string
    get:
      operationId: restoreCheckpoint
      summary: |
        Restore specified checkpoint.
      responses:
        '200':
          description: Checkpoint was restored successfully.
          content:
            application/json:
              schema:
                $ref: 'resources/Result.json'
        '401':
          description: Unauthorized. Missing valid authentication information.
        '403':
          description: |
            Forbidden. Client or user is not authorized to restore checkpoint for this
            specified workspace.

  /{upload_id}/delete_all_checkpoints:
    parameters:
      -in: path
       name: upload_id
       description: Unique long-lived identifier for the upload.
       required: true
       schema:
         type: string
    post:
      operationId: deleteAllCheckpoints
      desription: |
        Delete all checkpoint files for specified workspace.
      responses:
        '200':
          description: All checkpoint files for specified workspace were
            deleted successfully.
          content:
            application/json:
              schema:
                $ref: 'resources/Result.json'
        '401':
          description: Unauthorized. Missing valid authentication information.
        '403':
          description: |
            Forbidden. Client or user is not authorized to delete checkpoint files in this
            workspace.

  /{upload_id}/delete_checkpoint/{checkpoint_checksum}:
    parameters:
      -in: path
       name: upload_id
       description: Unique long-lived identifier for the upload.
       required: true
       schema:
         type: string
      -in: path
       name: checkpoint_checksum
       description: Checkpoint checksum that uniquely identifies
         checkpoint file.
       required: true
       schema:
         type: string
    delete:
      operationId: deleteCheckpoint
      summary: Deletes a single checkpoint.
      responses:
        '200':
          description: The checkpoint was deleted successfully.
          content:
            application/json:
              schema:
                $ref: 'resources/Result.json'
        '401':
          description: Unauthorized. Missing valid authentication information.
        '403':
          description: |
            Forbidden. Client or user is not authorized to delete specified checkpoint.
